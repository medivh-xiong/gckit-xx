//
//  <%= fileName %>
//  <%= project %>
//
//  Created by <%= organization %> on <%= createtime %>.
//  Copyright © 2022 <%= organization %>. All rights reserved.
//  控制器

#import "<%= className %>.h"

#import "MJRefresh.h"

#import "<%= cellName %>.h"

#import "<%= apiName %>.h"


@interface <%= className %> () <UITableViewDelegate, UITableViewDataSource>

@property (nonatomic, strong) UITableView *tableView;

@property (nonatomic, assign) NSInteger page;

@end

@implementation <%= className %>

#pragma mark - Life Cycle

- (void)viewDidLoad
{
    [super viewDidLoad];
    [self configViews];
    [self configData];
    [self configNotification];
}

- (void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];

}


#pragma mark - Setup View / Data

- (void)configViews
{
    self.title = @"XXXXX";

    [self.view addSubview:self.tableView];
    [self.tableView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.bottom.right.equalTo(self.view);
        make.top.equalTo(self.view).offset();
    }];

     self.tableView.contentInset = UIEdgeInsetsMake(0, 0, 0, 0);

    if (@available(iOS 11.0, *)) {
        self.tableView.estimatedRowHeight = 100;
        self.tableView.estimatedSectionFooterHeight = 0;
        self.tableView.estimatedSectionHeaderHeight = 0;
        self.tableView.contentInsetAdjustmentBehavior = UIScrollViewContentInsetAdjustmentNever;
    }

    [self.tableView registerClass:[UITableViewCell class] forCellReuseIdentifier:NSStringFromClass([UITableViewCell class])];
    [self.tableView registerClass:[<%= cellName %> class] forCellReuseIdentifier:NSStringFromClass([<%= cellName %> class])];

    self.tableView.mj_header = [MJRefreshNormalHeader headerWithRefreshingTarget:self refreshingAction:@selector(refreshData)];
    self.tableView.mj_footer = [MJRefreshBackNormalFooter footerWithRefreshingTarget:self refreshingAction:@selector(loadMoreData)];
}

- (void)configData
{
    [self refreshData];
}

- (void)configNotification
{
    // @weakify(self);
}


#pragma mark - Observer

#pragma mark - Notification

#pragma mark - Event Response

#pragma mark - Override Methods


#pragma mark - UITableView DataSource

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return self.dataArray.count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    id model = [self.dataArray safe_objectAtIndex:(NSUInteger) indexPath.row];
    <%= cellName %> *cell = [tableView dequeueReusableCellWithIdentifier:NSStringFromClass([<%= cellName %> class]) forIndexPath:indexPath];
    if (indexPath.row % 2 == 0) {
        cell.contentView.backgroundColor = [UIColor blueColor];
     } else {
        cell.contentView.backgroundColor = [UIColor redColor];
    }
    [cell updateViewByDataModel:model];
    return cell;
}


#pragma mark - UITableView Delegate

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return UITableViewAutomaticDimension;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    id model = [self.dataArray safe_objectAtIndex:(NSUInteger) indexPath.row];
}

        
#pragma mark - Public Methods


#pragma mark - Private Methods

- (void)refreshData
{
    self.page = 1;
    [self.tableView.mj_footer resetNoMoreData];
    [self fetchDataList:NO];
}

- (void)loadMoreData
{
    [self fetchDataList:YES];
}

- (void)handleRequestResponse:(BOOL)loadMore dataArray:(NSArray *)dataArray
{
    self.page += 1;
    if (loadMore) {
        NSMutableArray *tempArray = self.dataArray.mutableCopy;
        [tempArray addObjectsFromArray:dataArray];
        self.dataArray = tempArray.copy;
    }else {
        self.dataArray = dataArray.copy;
        [self.tableView.mj_header endRefreshing];
    }
    if (dataArray.count < 10) { 
        [self.tableView.mj_footer endRefreshingWithNoMoreData]; 
    }else {
        [self.tableView.mj_footer endRefreshing];
    }  
    [self.tableView reloadData];
}


#pragma mark - Network

- (void)fetchDataList:(BOOL)loadMore
{
    // 未登录/其他异常情况
    if (JY_IsStringEmpty(JY_USER_TOKEN) || nil == JYUserModelGet().currentStudent) {
        [self.tableView.mj_footer endRefreshing];
        [self.tableView.mj_header endRefreshing];
        self.dataArray = @[];
        [self.tableView reloadData];
        return;
    }
    
    [<%= apiName %> loadMainData:@{} success:^(NSArray<id *> *dataArray) {
        [self handleRequestResponse:loadMore dataArray:dataArray];
    } failure:^(NSString *errorMsg) {
        if (!JY_IsStringEmpty(errorMsg)) {  [self.view makeToast:msg]; }
        if (loadMore) {
            [self.tableView.mj_footer endRefreshing];
        }else {
            [self.tableView.mj_header endRefreshing];
        }
        //---- 下面可以用来展示空白页面
    }];
}


#pragma mark - Lazy

- (NSArray *)dataArray
{
    if (!_dataArray) {
        _dataArray = [[NSArray alloc] init];
    }
    return _dataArray;
}
    
- (UITableView *)tableView
{
    if (!_tableView) {
        _tableView = [[UITableView alloc] initWithFrame:CGRectZero style:UITableViewStylePlain];
        _tableView.delegate = self;
        _tableView.dataSource = self;
        _tableView.backgroundColor = [UIColor whiteColor];
        _tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
        _tableView.showsVerticalScrollIndicator = FALSE;
    }
    return _tableView;
}

@end
